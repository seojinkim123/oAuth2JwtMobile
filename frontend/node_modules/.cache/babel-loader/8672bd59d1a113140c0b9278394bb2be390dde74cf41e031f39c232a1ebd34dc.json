{"ast":null,"code":"var _jsxFileName = \"/Users/kimseojin/Desktop/oAuth2Jwt/frontend/src/components/OAuth2Redirect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { TokenStorage } from '../utils/tokenStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OAuth2Redirect = ({\n  onLoginSuccess\n}) => {\n  _s();\n  useEffect(() => {\n    // URL에서 토큰 파라미터 추출\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get('token');\n    const refreshToken = urlParams.get('refreshToken');\n    if (token && refreshToken) {\n      // 토큰 저장\n      TokenStorage.setAccessToken(token);\n      TokenStorage.setRefreshToken(refreshToken);\n      console.log('OAuth2 로그인 성공, 토큰 저장 완료');\n\n      // 부모 컴포넌트에 로그인 성공 알림\n      onLoginSuccess();\n\n      // URL 정리 (토큰 제거)\n      window.history.replaceState({}, document.title, window.location.pathname);\n    } else {\n      console.error('OAuth2 로그인 실패: 토큰을 찾을 수 없습니다.');\n    }\n  }, [onLoginSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4 text-gray-600\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(OAuth2Redirect, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = OAuth2Redirect;\nexport default OAuth2Redirect;\nvar _c;\n$RefreshReg$(_c, \"OAuth2Redirect\");","map":{"version":3,"names":["React","useEffect","TokenStorage","jsxDEV","_jsxDEV","OAuth2Redirect","onLoginSuccess","_s","urlParams","URLSearchParams","window","location","search","token","get","refreshToken","setAccessToken","setRefreshToken","console","log","history","replaceState","document","title","pathname","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kimseojin/Desktop/oAuth2Jwt/frontend/src/components/OAuth2Redirect.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { TokenStorage } from '../utils/tokenStorage';\n\nconst OAuth2Redirect = ({ onLoginSuccess }) => {\n  useEffect(() => {\n    // URL에서 토큰 파라미터 추출\n    const urlParams = new URLSearchParams(window.location.search);\n    const token = urlParams.get('token');\n    const refreshToken = urlParams.get('refreshToken');\n\n    if (token && refreshToken) {\n      // 토큰 저장\n      TokenStorage.setAccessToken(token);\n      TokenStorage.setRefreshToken(refreshToken);\n      \n      console.log('OAuth2 로그인 성공, 토큰 저장 완료');\n      \n      // 부모 컴포넌트에 로그인 성공 알림\n      onLoginSuccess();\n      \n      // URL 정리 (토큰 제거)\n      window.history.replaceState({}, document.title, window.location.pathname);\n    } else {\n      console.error('OAuth2 로그인 실패: 토큰을 찾을 수 없습니다.');\n    }\n  }, [onLoginSuccess]);\n\n  return (\n    <div className=\"flex justify-center items-center min-h-screen\">\n      <div className=\"text-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto\"></div>\n        <p className=\"mt-4 text-gray-600\">로그인 처리 중...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default OAuth2Redirect;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC7CN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,KAAK,GAAGL,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;IACpC,MAAMC,YAAY,GAAGP,SAAS,CAACM,GAAG,CAAC,cAAc,CAAC;IAElD,IAAID,KAAK,IAAIE,YAAY,EAAE;MACzB;MACAb,YAAY,CAACc,cAAc,CAACH,KAAK,CAAC;MAClCX,YAAY,CAACe,eAAe,CAACF,YAAY,CAAC;MAE1CG,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;;MAEtC;MACAb,cAAc,CAAC,CAAC;;MAEhB;MACAI,MAAM,CAACU,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,EAAEb,MAAM,CAACC,QAAQ,CAACa,QAAQ,CAAC;IAC3E,CAAC,MAAM;MACLN,OAAO,CAACO,KAAK,CAAC,+BAA+B,CAAC;IAChD;EACF,CAAC,EAAE,CAACnB,cAAc,CAAC,CAAC;EAEpB,oBACEF,OAAA;IAAKsB,SAAS,EAAC,+CAA+C;IAAAC,QAAA,eAC5DvB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BvB,OAAA;QAAKsB,SAAS,EAAC;MAAwE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9F3B,OAAA;QAAGsB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhCIF,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}